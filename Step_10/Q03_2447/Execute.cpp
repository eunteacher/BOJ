/*
문제
재귀적인 패턴으로 별을 찍어 보자. N이 3의 거듭제곱(3, 9, 27, ...)이라고 할 때, 크기 N의 패턴은 N×N 정사각형 모양이다.

크기 3의 패턴은 가운데에 공백이 있고, 가운데를 제외한 모든 칸에 별이 하나씩 있는 패턴이다.

***
* *
***

N이 3보다 클 경우, 크기 N의 패턴은 공백으로 채워진 가운데의 (N/3)×(N/3) 정사각형을 크기 N/3의 패턴으로 둘러싼 형태이다. 예를 들어 크기 27의 패턴은 예제 출력 1과 같다.

입력
첫째 줄에 N이 주어진다. N은 3의 거듭제곱이다. 즉 어떤 정수 k에 대해 N=3^k이며, 이때 1 ≤ k < 8이다.

출력
첫째 줄부터 N번째 줄까지 별을 출력한다.

***************************
* ** ** ** ** ** ** ** ** *
***************************
***   ******   ******   ***
* *   * ** *   * ** *   * *
***   ******   ******   ***
***************************
* ** ** ** ** ** ** ** ** *
***************************
*********         *********
* ** ** *         * ** ** *
*********         *********
***   ***         ***   ***
* *   * *         * *   * *
***   ***         ***   ***
*********         *********
* ** ** *         * ** ** *
*********         *********
***************************
* ** ** ** ** ** ** ** ** *
***************************
***   ******   ******   ***
* *   * ** *   * ** *   * *
***   ******   ******   ***
***************************
* ** ** ** ** ** ** ** ** *
***************************

*********
* ** ** *
*********
***   ***
* *   * *
***   ***
*********
* ** **	*
*********

*/
#include <iostream>
using namespace std;

// n = 3일때 (1,1)이 비어있다.
// n = 9일때 (3,3)(3,4)(3,5)(4,3)(4,4)(4,5)(5,3)(5,4)(5,5)이 비어있다.
// 그러므로 좌표를 (h, w)라 했을 경우
// (h / N) % 3 == 1 && (w / N) % 3 == 1을 만족하면 공백이다.
void Recursive(int h, int w, int N) // 높이, 폭, 입력받은 N
{
	if ((h / N) % 3 == 1 && (w / N) % 3 == 1)
		cout << " ";
	else
		if (N / 3 == 0)
			cout << "*"; // N을 3으로 더 이상 나눌 수 없으면 *을 출력
		else
			Recursive(h, w, N / 3); // 큰 단위에서 작은 단위로 검사 
}

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	int N;
	cin >> N;

	for (int i = 0; i < N; i++)
	{
		for (int j = 0; j < N; j++)
			Recursive(i, j, N);
		cout << '\n';
	}

	return 0;
}